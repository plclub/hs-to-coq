name:                containers-extracted
version:             0
-- synopsis:
-- description:
license:             MIT
license-file:        LICENSE
author:              Stephanie Weirich, Joachim Breitner
maintainer:          mail@joachim-breitner.de
-- copyright:
category:            Data
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:     ExtractedSet
  exposed-modules:     ExtractedIntSet
  exposed-modules:     ExtractedNumbers
  exposed-modules:     ExtractedString

-- the following are extracted and in extracted-src/, this list
-- needs to be manually maintained, e.g. with
-- find extracted-src/ -name \*.hs -printf "  exposed-modules: %f\n"|sed -e s/.hs//|sort
  exposed-modules: Ascii
  exposed-modules: Base
  exposed-modules: Basics
  exposed-modules: BinInt
  exposed-modules: BinNat
  exposed-modules: BinNums
  exposed-modules: BinPos
  exposed-modules: Bits
  exposed-modules: BitUtil
  exposed-modules: Bool
  exposed-modules: Bvector
  exposed-modules: Byte
  exposed-modules: ByteVector
  exposed-modules: Char
  exposed-modules: Classes
  exposed-modules: Const
  exposed-modules: CTZ
  exposed-modules: Datatypes
  exposed-modules: Decimal
  exposed-modules: DeferredFix
  exposed-modules: Either
  exposed-modules: Enum
  exposed-modules: Err
  exposed-modules: Err0
  exposed-modules: Fin
  exposed-modules: Foldable
  exposed-modules: Identity
  exposed-modules: Internal
  exposed-modules: Internal0
  exposed-modules: List
  exposed-modules: List0
  exposed-modules: Logic
  exposed-modules: Maybe
  exposed-modules: Monoid
  exposed-modules: Nat
  exposed-modules: Ndigits
  exposed-modules: Num
  exposed-modules: PeanoNat
  -- exposed-modules: Plus
  exposed-modules: Prim
  exposed-modules: PtrEquality
  exposed-modules: QArith_base
  exposed-modules: Real
  exposed-modules: Ring_theory
  exposed-modules: SemigroupInternal
  exposed-modules: Specif
  exposed-modules: String
  exposed-modules: Sumbool
  exposed-modules: Tuple
  exposed-modules: Tuple0
  exposed-modules: Unpeel
  exposed-modules: Vector
  exposed-modules: VectorDef
  exposed-modules: Wf
  exposed-modules: Wf0
  exposed-modules: Wf1
  exposed-modules: Wf_Z
  exposed-modules: ZArith_dec
  exposed-modules: Zbool
  exposed-modules: Zeven

  build-depends:       QuickCheck >= 2.9.2,
                       base >=4.9 && < 5
  build-depends:       deepseq
  build-depends:       random
  hs-source-dirs:      src
  hs-source-dirs:      extracted-src
  default-language:    Haskell2010


-----------------------------
-- B E N C H M A R K I N G --
-----------------------------


benchmark bench-native-set
  type: exitcode-stdio-1.0
  ghc-options: -O2
  main-is:             BenchNativeSet.hs
  hs-source-dirs:      .
  build-depends:       base >=4.9 && <5
  build-depends:       deepseq  >= 1.1.0.0 && < 1.5
  build-depends:       criterion
  build-depends:       containers == 0.5.11.0
  build-depends:       QuickCheck >= 2.9.2
  build-depends:       random
  default-language:    Haskell2010

benchmark bench-native-intset
  type: exitcode-stdio-1.0
  ghc-options:         -O2
  main-is:             BenchNativeIntSet.hs
  hs-source-dirs:      .
  build-depends:       base >=4.9 && <5
  build-depends:       containers-extracted
  build-depends:       deepseq >= 1.1.0.0 && < 1.5
  build-depends:       criterion
  build-depends:       containers == 0.5.11.0
  build-depends:       QuickCheck >= 2.9.2
  build-depends:       random
  default-language:    Haskell2010


benchmark bench-extracted-set
  type: exitcode-stdio-1.0
  ghc-options:         -O2
  main-is:             BenchSet.hs
  hs-source-dirs:      .
  build-depends:       base >=4.9 && <5
  build-depends:       containers-extracted
  build-depends:       deepseq  >= 1.1.0.0 && < 1.5
  build-depends:       criterion
  build-depends:       containers == 0.5.11.0
  build-depends:       QuickCheck >= 2.9.2
  build-depends:       random
  default-language:    Haskell2010

benchmark bench-extracted-intset
  type: exitcode-stdio-1.0
  ghc-options:         -O2
  main-is:             BenchIntSet.hs
  hs-source-dirs:      .
  build-depends:       base >=4.9 && <5
  build-depends:       containers-extracted
  build-depends:       deepseq  >= 1.1.0.0 && < 1.5
  build-depends:       criterion
  build-depends:       containers  == 0.5.11.0
  build-depends:       QuickCheck >= 2.9.2
  build-depends:       random
  default-language:    Haskell2010

-------------------
-- T E S T I N G --
-------------------

test-suite tests-set
  type: exitcode-stdio-1.0
  main-is:             SetProperties.hs
  hs-source-dirs:      .
  build-depends:       QuickCheck >= 2.9.2,
                       base >=4.9 && <5
  build-depends:       containers-extracted
  build-depends:       transformers
  build-depends:       HUnit
  build-depends:       QuickCheck
  build-depends:       test-framework-quickcheck2
  build-depends:       test-framework-hunit
  build-depends:       test-framework
  build-depends:       containers
  build-depends:       deepseq
  build-depends:       random
  default-language:    Haskell2010

test-suite tests-intset
  type: exitcode-stdio-1.0
  main-is:             IntSetProperties.hs
  other-modules:       IntSetValidity
  hs-source-dirs:      .
  build-depends:       QuickCheck >= 2.9.2,
                       base >=4.9 && <5
  build-depends:       containers-extracted
  build-depends:       transformers
  build-depends:       HUnit
  build-depends:       QuickCheck
  build-depends:       test-framework-quickcheck2
  build-depends:       test-framework-hunit
  build-depends:       test-framework
  build-depends:       containers
  build-depends:       deepseq
  build-depends:       random
  default-language:    Haskell2010
