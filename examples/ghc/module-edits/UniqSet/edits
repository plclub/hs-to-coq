rename type GHC.Num.Int = nat


skip UniqSet.pprUniqSet

# needs UniqFM.equalKeysUFM
# which needs Data.IntMap.Internal.mergeA
skip UniqSet.Eq___UniqSet
skip UniqSet.Ord__UniqSet

order UniqSet.unionUniqSets UniqSet.unionManyUniqSets
order UniqSet.Semigroup__UniqSet UniqSet.Monoid__UniqSet

redefine Definition UniqSet.unionManyUniqSets {a} (xs : list (UniqSet a)) : UniqSet a :=
    match xs with
      | nil => UniqSet.emptyUniqSet
      | cons uset usets => Data.Foldable.foldr UniqSet.unionUniqSets uset usets
    end.

add UniqSet Instance Unpeel_UniqSet ele : HsToCoq.Unpeel.Unpeel (UniqSet ele) (UniqFM.UniqFM ele) :=
  HsToCoq.Unpeel.Build_Unpeel _ _ (fun x => match x with | Mk_UniqSet y => y end) Mk_UniqSet.

redefine Local Definition UniqSet.Monoid__UniqSet_mempty {inst_a} : UniqSet inst_a :=
  Mk_UniqSet GHC.Base.mempty.

order Unpeel_UniqSet UniqSet.partitionUniqSet
order Unpeel_UniqSet UniqSet.Monoid__UniqSet_mappend
